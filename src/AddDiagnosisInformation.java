/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author fiza
 */
import Project.ConnectionProvider;
import java.sql.*;
import java.util.LinkedList;
import net.proteanit.sql.DbUtils;
import javax.swing.JOptionPane;

public class AddDiagnosisInformation extends javax.swing.JFrame {
     LinkedList <Diagnosis> diagnosisList = new LinkedList<>();

    /**
     * Creates new form AddDiagnosisInformation
     */
    public AddDiagnosisInformation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePatientRecord = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblRoom = new javax.swing.JLabel();
        txtDiagnosis = new javax.swing.JTextField();
        txtTreatment = new javax.swing.JTextField();
        checkboxAdmit = new javax.swing.JCheckBox();
        comboRoom = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Patient ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, -1, -1));

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 170, -1));

        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 80, 100, 30));

        tablePatientRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablePatientRecord);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 750, 80));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Diagnosis");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Medicine and treatment Suggested:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Admit Required?");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, -1, -1));

        lblRoom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblRoom.setText("Type of Room");
        getContentPane().add(lblRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 330, -1, -1));

        txtDiagnosis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDiagnosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiagnosisActionPerformed(evt);
            }
        });
        getContentPane().add(txtDiagnosis, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 229, -1));

        txtTreatment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTreatment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTreatmentActionPerformed(evt);
            }
        });
        getContentPane().add(txtTreatment, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 366, 49));

        checkboxAdmit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkboxAdmit.setText("Yes");
        checkboxAdmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAdmitActionPerformed(evt);
            }
        });
        getContentPane().add(checkboxAdmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 280, -1, -1));

        comboRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General ", "PrivateRoom", "Other" }));
        getContentPane().add(comboRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, -1, -1));

        btnSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, 81, -1));

        btnClose.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClose.setText("Close");
        btnClose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 440, 78, -1));

        jLabel4.setFont(new java.awt.Font("Sitka Text", 1, 40)); // NOI18N
        jLabel4.setText("Add Diagnosis Information");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 576, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BG-ImageProject.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 770, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String patientID = txtSearch.getText();
        try {
            Connection con= ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select *from patient where patientID='"+patientID+"'");
            tablePatientRecord.setModel(DbUtils.resultSetToTableModel(rs));
            JOptionPane.showMessageDialog(null, "Successful");
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Connection Error");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtDiagnosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiagnosisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiagnosisActionPerformed

    private void txtTreatmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTreatmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTreatmentActionPerformed

    private void checkboxAdmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAdmitActionPerformed
        if(checkboxAdmit.isSelected()){
            lblRoom.setVisible(true);
            comboRoom.setVisible(true);
        }
        else{
            lblRoom.setVisible(false);
            comboRoom.setVisible(false);
        }
    }//GEN-LAST:event_checkboxAdmitActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        String patientID = txtSearch.getText();
        String diagnosis = txtDiagnosis.getText();
        String treatment = txtTreatment.getText();
        String wardReq;
        String typeWard;

        // Check if admit is required
        if (!checkboxAdmit.isSelected()) {
            wardReq = "NO";
            typeWard = "None";
        } 
        else {
            wardReq = "YES";
            typeWard = (String) comboRoom.getSelectedItem();
        }


        // Save data to the database
        
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            st.executeUpdate("INSERT INTO patientreport VALUES ('" + patientID + "', '" + diagnosis + "', '" + treatment + "', '" + wardReq + "', '" + typeWard + "')");

            JOptionPane.showMessageDialog(null, "Updated Successfully!");
            
            diagnosisList= fetchPatientsFromDatabase();
         
            setVisible(false);
            new AddDiagnosisInformation().setVisible(true);
            System.out.println("Current Diagnosis information List:");
            
           for (Diagnosis d : diagnosisList) {
              System.out.println(d);
           }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed
   
    //method to fetch data from database and show in linkedlist
    
    private LinkedList<Diagnosis> fetchPatientsFromDatabase() {
    LinkedList<Diagnosis> list = new LinkedList<>();
    
    try {
        Connection con = ConnectionProvider.getCon();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM patientreport");

        while (rs.next()) {
            String id = rs.getString("patientId");
            String diagnosis = rs.getString("diagnosis");
            String treatment = rs.getString("treatment");
            String wardReq = rs.getString("wardReq");
            String typeWard = rs.getString("typeWard");

            Diagnosis p = new Diagnosis(id, diagnosis, treatment, wardReq, typeWard);
            list.add(p);
        }
    } catch (Exception e) {
        System.out.println("Error fetching Diagnosis information: " + e);
    }
    
    return list;
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDiagnosisInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddDiagnosisInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox checkboxAdmit;
    private javax.swing.JComboBox<String> comboRoom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRoom;
    private javax.swing.JTable tablePatientRecord;
    private javax.swing.JTextField txtDiagnosis;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTreatment;
    // End of variables declaration//GEN-END:variables
}
